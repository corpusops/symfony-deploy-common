ARG BASE=corpusops/centos-bare:7
FROM $BASE
ARG TZ=Europe/Paris
ARG PHP_VER=7.2
ARG PHP_VER_NO_DOT=72
ENV BUILD_DEV=$BUILD_DEV
ENV PHP_VER=$PHP_VER
ENV PHP_VER_NO_DOT=$PHP_VER_NO_DOT
# ENV DEBIAN_FRONTEND=noninteractive
ARG BUILD_DEV=y

# See https://github.com/nodejs/docker-node/issues/380
ARG GPG_KEYS=B42F6819007F00F88E364FD4036A9C25BF357DD4
ARG GPG_KEYS_SERVERS="hkp://p80.pool.sks-keyservers.net:80 hkp://ipv4.pool.sks-keyservers.net hkp://pgp.mit.edu:80"

WORKDIR /code
# ADD apt.txt /code/apt.txt
ADD yum.txt /code/yum.txt

USER root

RUN bash -c 'set -ex \
    && : "install packages" \
    && yum -y update \
    && yum -y install epel-release \
    && yum -y install http://rpms.remirepo.net/enterprise/remi-release-7.rpm \
    && yum install -y yum-utils yum-priorities \
    && yum -y update \
    && yum-config-manager --enable remi-php${PHP_VER_NO_DOT} \
    && yum -y install $(grep -vE "^\s*#" /code/yum.txt  | tr "\n" " ") \
    && yum clean all \
    && php --version \
    '

# set locale
ARG LANGUAGE=fr_FR
ARG CHARSET=UTF-8
ARG LANG=fr_FR.utf8
RUN sh -exc ': \
    && export INSTALL_LOCALES=${LANG} \
    && export INSTALL_DEFAULT_LOCALE=${LANG} \
    && if [ -e /usr/bin/setup_locales.sh ];then \
        /usr/bin/setup_locales.sh; \
    else \
        localedef \
            -i ${LANGUAGE} -c -f ${CHARSET} \
            -A /usr/share/locale/locale.alias \
            ${LANGUAGE}.${CHARSET};\
    fi'
ENV LANG=$LANG
ENV LC_ALL=$LANG

# setup project timezone, dependencies, user & workdir, gosu
RUN bash -c 'set -ex \
    && : "set correct timezone" \
    && ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone \
    '

RUN bash -c 'set -ex \
    && : "project user & workdir" \
    && useradd -ms /bin/bash symfony --uid 1000 \
      --home-dir /home/symfony \
    && chmod 2755 /home/symfony/ \
    && mkdir /home/symfony/.ssh \
    && chmod 0700 /home/symfony/.ssh \
    && chown -R symfony:symfony /home/symfony/ \
    '

RUN bash -c 'set -ex \
    && cd /code \
    && mkdir app \
    && mkdir app/public \
    && mkdir app/public/files \
    && mkdir app/private \
    && mkdir sbin \
    && mkdir sys \
    && mkdir init \
    && mkdir var \
    && mkdir var/cache \
    && mkdir var/nginxwebroot \
    && mkdir -p local/symfony-deploy-common/ \
    && chown -R symfony:symfony /code \
    '
ADD   --chown=symfony:symfony app          /code/app
ADD                           sys/sbin     /code/sbin
ADD                           sys          /code/sys
ADD          local/symfony-deploy-common/  /code/local/symfony-deploy-common/

# We make an intermediary init folder to allow to have the
# entrypoint mounted as a volume in dev
# cp -frnv => keeps existing stuff, add new stuff, this allows for existing files in project
# overriding the common stuff
# common -> sys
# sys -> init
# ==> init contains files from both local sys and common, common cannot override content from local sys
RUN bash -c 'set -ex \
    && : "connect init.sh" \
    && find /code -not -user symfony \
    | while read f;do chown symfony:symfony "$f";done \
    && cp -frnv /code/local/symfony-deploy-common/sys/* sys \
    && cp -frnv sys/* init \
    && ln -sf $(pwd)/init/init.sh /init.sh \
    '

RUN bash -c 'set -ex \
    && : "install composer" \
    && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \
    && /usr/local/bin/composer --version  \
    '

# TODO: fix php upgrade breaking symfony c:c
RUN bash -c 'set -ex \
    && : "temp fix ph" \
    && yum downgrade -y php-7.2.21 php-cli-7.2.21 php-common-7.2.21 php-gd-7.2.21 php-intl-7.2.21 php-fpm-7.2.21 php-mbstring-7.2.21 php-json-7.2.21 php-dba-7.2.21 php-soap-7.2.21 php-imap-7.2.21 php-xml-7.2.21 php-bcmath-7.2.21 php-pdo-7.2.21 php-process-7.2.21 php-pdo-7.2.21 php-xmlrpc-7.2.21 php-mysqlnd-7.2.21 php-pgsql-7.2.21 \
    '

WORKDIR /code/app

# Potential ssh keys for application user
ADD keys/* /home/symfony/.ssh/
RUN bash -c 'set -ex \
    && : "alter rights and ownerships of ssh keys" \
    && chmod 0600 /home/symfony/.ssh/* \
    && chmod 0644 /home/symfony/.ssh/*.pub \
    && chown -R symfony:symfony /home/symfony/.ssh/* \
    '

RUN bash -c 'set -ex \
    && : "generate a default app.env from the app/.env.dist" \
    && cp /code/app/.env.dist /code/app/.env \
    && chown symfony:symfony /code/app/.env \
    '

# Note the --no-scripts for composer is to avoid the symfony cache clear
# which requires a working database
RUN bash -c 'set -ex \
    && : "run  composerinstall.sh" \
    && /code/init/sbin/composerinstall.sh --no-scripts \
    '

RUN bash -c 'set -ex \
    && : "remove default php-fpm pool" \
    && rm -f /etc/php-fpm.d/www.conf \
  '

# image will drop privileges itself using gosu
ENTRYPOINT []
CMD "/init.sh"
